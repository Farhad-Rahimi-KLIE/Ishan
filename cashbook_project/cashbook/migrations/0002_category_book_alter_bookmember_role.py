from django.db import migrations, models

def assign_categories_to_books(apps, schema_editor):
    Category = apps.get_model('cashbook', 'Category')  # Replace 'cashbook' with your app name
    Book = apps.get_model('cashbook', 'Book')
    for category in Category.objects.all():
        # Assign the category to the first book created by the same user
        book = Book.objects.filter(created_by=category.created_by).first()
        if book:
            category.book = book
            category.save()
        else:
            # Handle cases where no book exists for the user
            default_book = Book.objects.first()  # Fallback to the first book in the system
            if default_book:
                category.book = default_book
                category.save()
            else:
                # Optionally, delete categories with no associated book
                category.delete()
                print(f"Deleted category {category.name} created by {category.created_by.username} due to no available books.")

class Migration(migrations.Migration):
    dependencies = [
        ('cashbook', '0001_initial'),  # Replace with the actual previous migration name
    ]

    operations = [
        # Step 1: Add the 'book' field with null=True
        migrations.AddField(
            model_name='Category',
            name='book',
            field=models.ForeignKey(
                on_delete=models.CASCADE,
                related_name='categories',
                to='cashbook.Book',  # Replace 'cashbook' with your app name
                null=True,  # Allow null temporarily
            ),
        ),
        # Step 2: Run the data migration to populate the 'book' field
        migrations.RunPython(assign_categories_to_books),
        # Step 3: Alter the 'book' field to null=False
        migrations.AlterField(
            model_name='Category',
            name='book',
            field=models.ForeignKey(
                on_delete=models.CASCADE,
                related_name='categories',
                to='cashbook.Book',  # Replace 'cashbook' with your app name
                null=False,  # Enforce non-nullable after data migration
            ),
        ),
        # Existing operation for altering BookMember role (if applicable)
        migrations.AlterField(
            model_name='BookMember',
            name='role',
            field=models.CharField(
                choices=[('partner', 'Partner'), ('manager', 'Manager'), ('admin', 'Admin')],
                default='partner',
                max_length=10,
            ),
        ),
    ]




# # Generated by Django 5.2.4 on 2025-08-31 04:02

# import django.db.models.deletion
# from django.db import migrations, models

# def assign_categories_to_books(apps, schema_editor):
#     Category = apps.get_model('cashbook', 'Category')
#     Book = apps.get_model('cashbook', 'Book')
#     for category in Category.objects.all():
#         # Assign the category to the first book created by the same user
#         book = Book.objects.filter(created_by=category.created_by).first()
#         if book:
#             category.book = book
#             category.save()
#         else:
#             # Optional: Handle cases where no book exists for the user
#             # For example, assign to a default book or skip
#             default_book = Book.objects.first()  # Fallback to the first book in the system
#             if default_book:
#                 category.book = default_book
#                 category.save()
#             else:
#                 # Log or handle cases where no book exists (e.g., delete category or raise error)
#                 print(f"No book found for category {category.name} created by {category.created_by.username}")

# class Migration(migrations.Migration):

#     dependencies = [
#         ('cashbook', '0001_initial'),
#     ]

#     operations = [
#         migrations.AddField(
#             model_name='Category',
#             name='book',
#             field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='cashbook.book'),
#             null=True,
#         ),
#        migrations.RunPython(assign_categories_to_books),
#         migrations.AlterField(
#             model_name='Category',
#             name='book',
#             field=models.ForeignKey(
#                 on_delete=models.CASCADE,
#                 related_name='categories',
#                 to='cashbook.Book',
#             ),
#         ),
#     ]